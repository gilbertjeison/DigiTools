@model IEnumerable<DigiTools.Database.kpis>

@{
    ViewBag.Title = "Kpis";
    ViewBag.MttrSite = 0;
}
<!--ANIMATE CSS-->
<link href="~/Scripts/plugins/animate-css/animate.min.css" rel="stylesheet" />
<!-- Bootstrap Select Css -->
<link href="~/Scripts/plugins/bootstrap-select/css/bootstrap-select.min.css" rel="stylesheet" />
<!--YEARPICKER CSS-->
<link href="~/Scripts/plugins/yearpicker/yearpicker.css" rel="stylesheet" />
<!--SLICKGRID CSS-->
<link href="~/Scripts/plugins/slickgrid/slick.grid.css" rel="stylesheet" />
<link href="~/Scripts/plugins/slickgrid/css/jquery-ui.css" rel="stylesheet" />
<link href="~/Scripts/plugins/slickgrid/examples.css" rel="stylesheet" />
<!--SITE CSS-->
<link href="~/Content/Site.css" rel="stylesheet" />

<style>
    .input-group .form-line {
        border-bottom: none;
    }

    .exep {
        border-bottom: 1px solid #ddd !important;
    }

    .form-control {
        height: 28px;
        padding: 0;
    }

    .gridMttr, .gridMtbf {
        width: 100%;
        height: 370px;
        //margin: 0 auto;
        border: 1px solid #2779aa;
    }

    .totals {
        font-weight: bold;
        color: #2779aa;
        font-style: italic;
    }
</style>
<div class="card">
    <div class="header bg-blue">
        <h2>KPI'S</h2>
        <small>Indicadores de mantenimiento</small>
    </div>
    <div class="body">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active">
                <a href="#mttr" data-toggle="tab">
                    <i class="material-icons">timeline</i><strong> MTTR</strong>
                </a>
            </li>
            <li role="presentation">
                <a href="#mtbf" data-toggle="tab">
                    <i class="material-icons">graphic_eq</i><strong> MTBF</strong>
                </a>
            </li>
        </ul>
        <!-- Tab panes -->
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane fade animated in bounceInLeft active" id="mttr">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        Tiempo medio de reparación
                    </div>
                    <div class="panel-body ">
                        <div class="row">
                            <div class="col-md-3">
                                <label for="TipoLinea">Planta</label>
                                <div class="input-group">
                                    <div class="form-line">
                                        <select name="IdPlanta" id="IdPlanta" class="selectpicker show-tick IdPlanta" required>
                                            @foreach (var item in ViewBag.PlantasList)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <label for="IdLinea">Línea</label>
                                <div class="input-group">
                                    <div class="form-line">
                                        <select name="IdLinea"
                                                class="selectpicker show-tick IdLinea"
                                                data-dropup-auto="false"
                                                data-size="5"
                                                data-live-search="true" required></select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <label for="IdAno">Año</label>
                                <div class="input-group">
                                    <div class="form-line exep">
                                        <input type="text" name="YearMttr" id="YearMttr" class="yearpicker form-control" required />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <button id="btnGenerarMttr" class="btn btn-default waves-effect align-center" style="margin-top:7%;">
                                    <i class="material-icons">check</i>
                                    <span>Generar información</span>
                                </button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div id="gridMttr" class="gridMttr"></div>
                            </div>
                            <div class="col-md-7">
                                <div class="card hdd" style="border-radius:10px;">
                                    <div class="body initC">
                                        <canvas id="chart" class="animated fadeIn"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-2">
                                <div class="gray_cube bg-cyan" style="text-align:center;">
                                    <label>SITE: <span id="MttrSite">0</span></label>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="gray_cube bg-orange" style="text-align:center;">
                                    <label><span id="plantName">PLANTA</span>: <span id="MttrPlant">0</span></label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane fade animated bounceInLeft" id="mtbf">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        Tiempo medio entre fallos
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-3">
                                <label for="IdPlantaM">Planta</label>
                                <div class="input-group">
                                    <div class="form-line">
                                        <select name="IdPlantaM" id="IdPlantaM" class="selectpicker show-tick IdPlantaM" required>
                                            @foreach (var item in ViewBag.PlantasList)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <label for="IdLineaM">Línea</label>
                                <div class="input-group">
                                    <div class="form-line">
                                        <select name="IdLineaM"
                                                class="selectpicker show-tick IdLineaM"
                                                data-dropup-auto="false"
                                                data-size="5"
                                                data-live-search="true" required></select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <label for="IdAnoM">Año</label>
                                <div class="input-group">
                                    <div class="form-line exep">
                                        <input type="text" name="YearMtbf" id="YearMtbf" class="yearpicker form-control" required />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <button id="btnGenerarMtbf" class="btn btn-default waves-effect align-center" style="margin-top:7%;">
                                    <i class="material-icons">check</i>
                                    <span>Generar información</span>
                                </button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div id="gridMtbf" class="gridMtbf"></div>
                            </div>
                            <div class="col-md-7">
                                <div class="card hddM" style="border-radius:10px;">
                                    <div class="body initCM">
                                        <canvas id="chartM" class="animated fadeIn"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-2">
                                <div class="gray_cube bg-cyan" style="text-align:center;">
                                    <label>SITE: <span id="MtbfSite">0</span></label>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="gray_cube bg-orange" style="text-align:center;">
                                    <label><span id="plantName">PLANTA</span>: <span id="MtbfPlant">0</span></label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Select Plugin Js -->
<script src="~/Scripts/plugins/bootstrap-select/js/bootstrap-select.min.js"></script>
<script src="~/Scripts/plugins/bootstrap-select/js/i18n/defaults-es_CL.js"></script>
<!--YEARPICKER JS-->
<script src="~/Scripts/plugins/yearpicker/yearpicker.js"></script>
<!--SLICKGRID JS-->
<script src="~/Scripts/plugins/slickgrid/lib/jquery-ui-1.11.3.js"></script>
<script src="~/Scripts/plugins/slickgrid/lib/jquery.event.drag-2.3.0.js"></script>
<script src="~/Scripts/plugins/slickgrid/slick.core.js"></script>
<script src="~/Scripts/plugins/slickgrid/slick.grid.js"></script>
<!--CHART JS-->
<script src="~/Scripts/plugins/chartjs/Chart.bundle.min.js"></script>

<script>
    //FILL GRID
    //SLICKGRID
    var dataM = [];
    var gridM;

    var options = {
        enableCellNavigation: true,
        enableColumnReorder: false,
        forceFitColumns: true,
        multiColumnSort: true
    }

    var columnsM = [
        { id: "line", name: "Línea", field: "LineName", width: 150 },
        { id: "year", name: "Año", field: "Year", width: 50 },
        { id: "mes", name: "Mes", field: "MesName", sortable: true },
        { id: "mtbf", name: "MTBF", field: "Mtbf" }
    ];

    function TotalsDataProviderM(data, columns) {
        
        var totals = {};
        var totalsMetadata = {
            // Style the totals row differently.
            cssClasses: "totals",
            columns: {}
        };
        // Make the totals not editable.
        for (var i = 0; i < columns.length; i++) {
            totalsMetadata.columns[i] = { editor: null };
        }
        this.getLength = function () {
            return data.length + 1;
        };
        this.getItem = function (index) {
            return (index < data.length) ? data[index] : totals;
        };
        this.updateTotals = function () {
            var columnIdx = 3;
            var columnId = columns[columnIdx].id;
            var total = 0;
            var i = data.length;
            while (i--) {
                total += (parseFloat(data[i]['Mtbf'], 10) || 0);
            }
            totals['Mtbf'] = "Sum:  " + total;
        };
        this.getItemMetadata = function (index) {
            return (index != data.length) ? null : totalsMetadata;
        };
        this.updateTotals();
    }

    function initGridM() {

        var dataProviderM = new TotalsDataProviderM(dataM, columnsM);
       
        gridM = new Slick.Grid("#gridMtbf", dataProviderM, columnsM, options);

        //HABILITAR ORDENACIÓN
        gridM.onSort.subscribe(function (e, args) {
            var cols = args.sortCols;

            dataM.sort(function (dataRow1, dataRow2) {
                for (var i = 0, l = cols.length; i < l; i++) {
                    var field = cols[i].sortCol.field;
                    var sign = cols[i].sortAsc ? 1 : -1;
                    var value1 = dataRow1[field], value2 = dataRow2[field];
                    var result = (value1 == value2 ? 0 : (value1 > value2 ? 1 : -1)) * sign;
                    if (result != 0) {
                        return result;
                    }
                }
                return 0;

            });
            gridM.invalidate();
            gridM.render();

        });

        $('#gridMtbf').show("slow");
        $('.hddM').show("slow");
    }

</script>
<script>
    //FILL GRID
    //SLICKGRID
    var data = [];
    var grid;

    var columns = [
        { id: "line", name: "Línea", field: "LineName",width:150 },
        { id: "year", name: "Año", field: "Year", width: 50 },
        { id: "mes", name: "Mes", field: "MesName", sortable:true },
        { id: "mttr", name: "MTTR", field: "Mttr" }
    ];

    

    function TotalsDataProvider(data, columns) {
        var totals = {};
        var totalsMetadata = {
            // Style the totals row differently.
            cssClasses: "totals",
            columns: {}
        };
        // Make the totals not editable.
        for (var i = 0; i < columns.length; i++) {
            totalsMetadata.columns[i] = { editor: null };
        }
        this.getLength = function () {
            return data.length + 1;
        };
        this.getItem = function (index) {
            return (index < data.length) ? data[index] : totals;
        };
        this.updateTotals = function () {
            var columnIdx = 3;
            var columnId = columns[columnIdx].id;
            var total = 0;
            var i = data.length;
            while (i--) {
                total += (parseFloat(data[i]['Mttr'], 10) || 0);
            }
            totals['Mttr'] = "Sum:  " + total;
        };
        this.getItemMetadata = function (index) {
            return (index != data.length) ? null : totalsMetadata;
        };
        this.updateTotals();
    }

    function initGrid() {
        var dataProvider = new TotalsDataProvider(data, columns);

        grid = new Slick.Grid("#gridMttr", dataProvider, columns, options);

        //HABILITAR ORDENACIÓN
        grid.onSort.subscribe(function (e, args) {
            var cols = args.sortCols;

            data.sort(function (dataRow1, dataRow2) {
                for (var i = 0, l = cols.length; i < l; i++) {
                    var field = cols[i].sortCol.field;
                    var sign = cols[i].sortAsc ? 1 : -1;
                    var value1 = dataRow1[field], value2 = dataRow2[field];
                    var result = (value1 == value2 ? 0 : (value1 > value2 ? 1 : -1)) * sign;
                    if (result != 0) {
                        return result;
                    }
                }
                return 0;

            });
            grid.invalidate();
            grid.render();

        });

        $('#gridMttr').show("slow");
        $('.hdd').show("slow");
    }

    //ORDENAR POR MES
    var sortColumn = "mes";
    var sortDir = 1;

    $(function () {
        //OCULTAR GRID
        $('#gridMttr').hide(1000);
        $('.hdd').hide(1000);

        //AL MOMENTO DE SELECCIONAR UNA PLANTA, SE DISPARA EL EVENTO
        $('.IdPlanta').change(function ()
        {
            //OBTENER ID SELECCIONADO
            var idPlanta = $(this).find("option:selected").val();
            //URL PARA OBTENER LOS DATOS
            var url = '@Url.Content("~/")' + "Kpis/GetLineAsync";
            //RECREAR EL OBJETO SELECTPICKER
            $('.IdLinea').selectpicker('destroy');
            $('.IdLinea').empty();
            //INICIALIZAR OBJETO AJAX PARA TRAER DATOS DEL SERVIDOR
            $.ajax({
                //PARAMETRIZAR SERVICIO AJAX
                url: url,
                type: 'post',
                data: { id: idPlanta },
                //MOSTRAR LOADER ANTES DE INICIAR LA SOLICITUD
                beforeSend: function () {
                    $('.page-loader-wrapper').fadeIn();
                },
                success: function (response) {
                    //ITERAR CON LA LISTA DE RESULTADOS
                    $.each(response, function (i, linea) {
                        //CREAR ITEM CON CADA ITERACIÓN
                        $('.IdLinea').append($('<option>', {
                            value: linea.Value,
                            text: linea.Text
                        }));
                    });
                    //REFRESCAR Y RECARGAR EL OBJETO
                    $('.IdLinea').selectpicker('refresh');
                    //OCULTAR LOADER UNA VEZ CARAGADA LA INFORMACIÓN
                    $('.page-loader-wrapper').fadeOut();
                },
                //EN CASO DE ERROR, IMPRIMIRLO
                error: function (error) {
                    alert(error);
                }
            });
        });

        $('#btnGenerarMttr').click(function () {

            var id_line = $('.IdLinea').find("option:selected").val();
            var year = $('#YearMttr').val();


            //VALIDAR LOS FILTROS
            if (id_line > 0 && $.isNumeric(year)) {
                var url_filter = '@Url.Content("~/")' + "Kpis/CalculateMttrAsync";
                var url_filterChart = '@Url.Content("~/")' + "Kpis/CalculateCharDataAsync";

                //INICIALIZAR OBJETO AJAX PARA TRAER DATOS DEL SERVIDOR
                $.ajax({
                    //PARAMETRIZAR SERVICIO AJAX
                    url: url_filter,
                    type: 'post',
                    data: { id_line: id_line, year: year },
                    //MOSTRAR LOADER ANTES DE INICIAR LA SOLICITUD
                    beforeSend: function () {
                        $('.page-loader-wrapper').fadeIn();
                    },
                    success: function (response, status, xhr) {

                        $('#MttrSite').text(xhr.getResponseHeader("MttrSite"));
                        $('#MttrPlant').text(xhr.getResponseHeader("MttrPlant"));
                        data = response;
                        initGrid();

                        //INICIALIZAR OBJETO AJAX PARA TRAER DATOS DEL SERVIDOR
                        $.ajax({
                            //PARAMETRIZAR SERVICIO AJAX
                            url: url_filterChart,
                            type: 'post',
                            data: { id_line: id_line, year: year },
                            success: function (response_chart) {

                                InitChar(response_chart,data);
                            },
                            //EN CASO DE ERROR, IMPRIMIRLO
                            error: function (request, status, error) {
                                alert('Error al aplicar filtros a tiempos de carga: ' + error + request.responseText);

                            }
                        });
                        //OCULTAR LOADER UNA VEZ CARAGADA LA INFORMACIÓN
                        $('.page-loader-wrapper').fadeOut();
                    },
                    //EN CASO DE ERROR, IMPRIMIRLO
                    error: function (request, status, error) {
                        alert('Error al aplicar filtros a tiempos de carga: ' + error + request.responseText);
                    }
                });

                //CONSULTAR MTTR DEL SITE Y DE LA PLANTA
            }
            else {
                swal("Tiempos de carga", "Debe seleccionar Línea y Año", "warning");
            }
        });



        //MTBF
        //OCULTAR GRID
        $('#gridMtbf').hide(1000);
        $('.hddM').hide(1000);

        //AL MOMENTO DE SELECCIONAR UNA PLANTA, SE DISPARA EL EVENTO
        $('.IdPlantaM').change(function ()
        {
            //OBTENER ID SELECCIONADO
            var idPlantaM = $(this).find("option:selected").val();
            //URL PARA OBTENER LOS DATOS
            var urlM = '@Url.Content("~/")' + "Kpis/GetLineAsync";
            //RECREAR EL OBJETO SELECTPICKER
            $('.IdLineaM').selectpicker('destroy');
            $('.IdLineaM').empty();
            //INICIALIZAR OBJETO AJAX PARA TRAER DATOS DEL SERVIDOR
            $.ajax({
                //PARAMETRIZAR SERVICIO AJAX
                url: urlM,
                type: 'post',
                data: { id: idPlantaM },
                //MOSTRAR LOADER ANTES DE INICIAR LA SOLICITUD
                beforeSend: function () {
                    $('.page-loader-wrapper').fadeIn();
                },
                success: function (response) {
                    //ITERAR CON LA LISTA DE RESULTADOS
                    $.each(response, function (i, linea) {
                        //CREAR ITEM CON CADA ITERACIÓN
                        $('.IdLineaM').append($('<option>', {
                            value: linea.Value,
                            text: linea.Text
                        }));
                    });
                    //REFRESCAR Y RECARGAR EL OBJETO
                    $('.IdLineaM').selectpicker('refresh');
                    //OCULTAR LOADER UNA VEZ CARAGADA LA INFORMACIÓN
                    $('.page-loader-wrapper').fadeOut();
                },
                //EN CASO DE ERROR, IMPRIMIRLO
                error: function (error) {
                    alert(error);
                }
            });
        });

        $('#btnGenerarMtbf').click(function () {

            var id_lineM = $('.IdLineaM').find("option:selected").val();
            var yearM = $('#YearMtbf').val();


            //VALIDAR LOS FILTROS
            if (id_lineM > 0 && $.isNumeric(yearM)) {
                var url_filterM = '@Url.Content("~/")' + "Kpis/CalculateMtbfAsync";
                var url_filterChartM = '@Url.Content("~/")' + "Kpis/CalculateCharDataMAsync";

                //INICIALIZAR OBJETO AJAX PARA TRAER DATOS DEL SERVIDOR
                $.ajax({
                    //PARAMETRIZAR SERVICIO AJAX
                    url: url_filterM,
                    type: 'post',
                    data: { id_line: id_lineM, year: yearM },
                    //MOSTRAR LOADER ANTES DE INICIAR LA SOLICITUD
                    beforeSend: function () {
                        $('.page-loader-wrapper').fadeIn();
                    },
                    success: function (response, status, xhr) {

                        $('#MtbfSite').text(xhr.getResponseHeader("MtbfSite"));
                        $('#MtbfPlant').text(xhr.getResponseHeader("MtbfPlant"));
                        dataM = response;
                        initGridM();

                        //INICIALIZAR OBJETO AJAX PARA TRAER DATOS DEL SERVIDOR
                        $.ajax({
                            //PARAMETRIZAR SERVICIO AJAX
                            url: url_filterChartM,
                            type: 'post',
                            data: { id_line: id_lineM, year: yearM },
                            //MOSTRAR LOADER ANTES DE INICIAR LA SOLICITUD    
                            success: function (response_chart) {

                                InitCharM(response_chart,dataM);
                            },
                            //EN CASO DE ERROR, IMPRIMIRLO
                            error: function (request, status, error) {
                                alert('Error al generar información MTBF: ' + error + request.responseText);
                            }
                        });
                        //OCULTAR LOADER UNA VEZ CARAGADA LA INFORMACIÓN
                        $('.page-loader-wrapper').fadeOut();
                    },
                    //EN CASO DE ERROR, IMPRIMIRLO
                    error: function (request, status, error) {
                        alert('Error al generar información MTBF: ' + error + request.responseText);
                    }
                });

                //CONSULTAR MTTR DEL SITE Y DE LA PLANTA
            }
            else {
                swal("KPI'S", "Debe seleccionar Línea y Año", "warning");
            }
        });

    });
</script>
<script>
    function InitChar(response_chart, d) {

        $("canvas#chart").remove();
        $("div.initC").html('<canvas id="chart" class="animated fadeIn"></canvas>');
        // set default to straight lines - no curves
        // Chart.defaults.global.elements.line.tension = 0;
        // set default no fill beneath the line

        Chart.defaults.global.elements.line.fill = false;

        var dataEspTec = response_chart.map(e => e.EsperaTecnico);
        var dataTiemDiag = response_chart.map(e => e.TiempoDiagnostico);
        var dataEsperaRep = response_chart.map(e => e.EsperaRepuestos);
        var dataTiempoRep = response_chart.map(e => e.TiempoReparacion);
        var dataTiempoPru = response_chart.map(e => e.TiempoPruebas);
        var Meses = response_chart.map(e => e.MesName);
        var Mttr = d.map(e => e.Mttr);
        var max_mttr = Math.max.apply(Math, Mttr);
        var max_tm = Math.max.apply(Math, dataEspTec, dataTiemDiag, dataEsperaRep, dataTiempoRep, dataTiempoPru);
        // stacked bar with 2 unstacked lines - nope
        var barChartData = {

            labels: Meses,
            datasets: [
                {
                    type: 'line',
                    label: 'MTTR',
                    yAxisID: "y-axis-1",
                    backgroundColor: "rgba(151,187,205,0.15)",
                    data: Mttr
                },
                {
                    type: 'bar',
                    label: 'T. de espera inicial del técnico',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(255, 99, 132)",
                    data: dataEspTec
                },
                {
                    type: 'bar',
                    label: 'T. de diagnóstico',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(255, 159, 64)",
                    data: dataTiemDiag
                },
                {
                    type: 'bar',
                    label: 'T. espera por repuestos',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(255, 205, 86)",
                    data: dataEsperaRep
                },
                {
                    type: 'bar',
                    label: 'T. de reparación o cambio de piezas',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(75, 192, 192)",
                    data: dataTiempoRep
                },
                {
                    type: 'bar',
                    label: 'Pruebas y tiempo de arranque',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(54, 162, 235)",
                    data: dataTiempoPru
                }
            ]
        };

        var ctx = document.getElementById("chart").getContext("2d");
        // allocate and initialize a chart
        var ch = new Chart(ctx, {
            type: 'bar',
            data: barChartData,
            options: {
                title: {
                    display: true,
                    text: "Stacked (combinado)"
                },
                tooltips: {
                    mode: 'label'
                },
                responsive: true,
                scales: {
                    xAxes: [{
                        stacked: true
                    }],
                    yAxes: [{
                        stacked: true,
                        position: "left",
                        id: "y-axis-0",
                        ticks: {
                            beginAtZero: true,
                            suggestedMax: max_tm
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'Tiempo de Averías'
                        }
                    }, {
                        display: true,
                        stacked: false,
                        position: "right",
                        id: "y-axis-1",
                        ticks: {
                            beginAtZero: true,
                            suggestedMax: max_mttr
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'MTTR - MIN'
                        }
                    }]
                }
            }
        });
    }

    function InitCharM(response_chart, d) {

        $("canvas#chartM").remove();
        $("div.initCM").html('<canvas id="chartM" class="animated fadeIn"></canvas>');
        // set default to straight lines - no curves
        // Chart.defaults.global.elements.line.tension = 0;
        // set default no fill beneath the line

        Chart.defaults.global.elements.line.fill = false;
        
        var dataFactoresExt = response_chart.map(e => e.FactoresExt);
        var dataFaltaCono = response_chart.map(e => e.FaltaCono);
        var dataFaltaDis = response_chart.map(e => e.FaltaDis);
        var dataFaltaMtto = response_chart.map(e => e.FaltaMtto);
        var dataCondSubEstOpe = response_chart.map(e => e.CondSubEstOpe);
        var dataFaltaConBas = response_chart.map(e => e.FaltaConBas);
       
        var Meses = response_chart.map(e => e.MesName);
        var Mtbf = d.map(e => e.Mtbf);
        var max_mtbf = Math.max.apply(Math, Mtbf);
        var max_ccr = Math.max.apply(Math, dataFactoresExt, dataFaltaCono, dataFaltaDis, dataFaltaMtto, dataCondSubEstOpe, dataFaltaConBas);
        // stacked bar with 2 unstacked lines - nope
        var barChartData = {

            labels: Meses,
            datasets: [
                {
                    type: 'line',
                    label: 'MTBF',
                    yAxisID: "y-axis-1",
                    backgroundColor: "rgba(151,187,205,0.15)",
                    data: Mtbf
                },
                {
                    type: 'bar',
                    label: 'Factores externos [FI]',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(255, 99, 132)",
                    data: dataFactoresExt
                },
                {
                    type: 'bar',
                    label: 'Falta de Conocimiento [PD]',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(255, 159, 64)",
                    data: dataFaltaCono
                },
                {
                    type: 'bar',
                    label: 'Falta de Diseño [FI]',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(255, 205, 86)",
                    data: dataFaltaDis
                },
                {
                    type: 'bar',
                    label: 'Falta de Mantenimiento [PM]',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(75, 192, 192)",
                    data: dataFaltaMtto
                },
                {
                    type: 'bar',
                    label: 'Condiciones Sub estandar de operación [PD]',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(54, 162, 235)",
                    data: dataCondSubEstOpe
                },
                {
                    type: 'bar',
                    label: 'Falta de Condiciones básicas [AA]',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(250, 52, 36)",
                    data: dataFaltaConBas
                }
            ]
        };

        var ctx = document.getElementById("chartM").getContext("2d");
        // allocate and initialize a chart
        var ch = new Chart(ctx, {
            type: 'bar',
            data: barChartData,
            options: {
                title: {
                    display: true,
                    text: "Stacked (combinado)"
                },
                tooltips: {
                    mode: 'label'
                },
                responsive: true,
                scales: {
                    xAxes: [{
                        stacked: true
                    }],
                    yAxes: [{
                        stacked: true,
                        position: "left",
                        id: "y-axis-0",
                        ticks: {
                            beginAtZero: true,
                            suggestedMax: max_ccr
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'Número de averías'
                        }
                    }, {
                        display: true,
                        stacked: false,
                        position: "right",
                        id: "y-axis-1",
                        ticks: {
                            beginAtZero: true,
                            suggestedMax: max_mtbf
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'MTBF - HORAS'
                        }
                    }]
                }
            }
        });
    }
</script>
