@model IEnumerable<DigiTools.Database.kpis>

@{
    ViewBag.Title = "Kpis";
}
<!--ANIMATE CSS-->
<link href="~/Scripts/plugins/animate-css/animate.min.css" rel="stylesheet" />
<!-- Bootstrap Select Css -->
<link href="~/Scripts/plugins/bootstrap-select/css/bootstrap-select.min.css" rel="stylesheet" />
<!--YEARPICKER CSS-->
<link href="~/Scripts/plugins/yearpicker/yearpicker.css" rel="stylesheet" />
<!--SLICKGRID CSS-->
<link href="~/Scripts/plugins/slickgrid/slick.grid.css" rel="stylesheet" />
<link href="~/Scripts/plugins/slickgrid/css/jquery-ui.css" rel="stylesheet" />
<link href="~/Scripts/plugins/slickgrid/examples.css" rel="stylesheet" />

<style>
    .input-group .form-line {
        border-bottom: none;
    }

    .exep {
        border-bottom: 1px solid #ddd !important;
    }

    .form-control {
        height: 28px;
        padding: 0;
    }

    .gridMttr {
        width: 100%;
        height: 370px;
        //margin: 0 auto;
        border: 1px solid #2779aa;
    }

    .totals {
        font-weight: bold;
        color: #2779aa;
        font-style: italic;
    }
</style>
<div class="card">
    <div class="header bg-blue">
        <h2>KPI'S</h2>
        <small>Indicadores de mantenimiento</small>
    </div>
    <div class="body">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active">
                <a href="#mttr" data-toggle="tab">
                    <i class="material-icons">timeline</i><strong> MTTR</strong>
                </a>
            </li>
            <li role="presentation">
                <a href="#mtbf" data-toggle="tab">
                    <i class="material-icons">graphic_eq</i><strong> MTBF</strong>
                </a>
            </li>
        </ul>
        <!-- Tab panes -->
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane fade animated in bounceInLeft active" id="mttr">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        Tiempo medio de reparación
                    </div>
                    <div class="panel-body ">
                        <div class="row">
                            <div class="col-md-3">
                                <label for="TipoLinea">Planta</label>
                                <div class="input-group">
                                    <div class="form-line">
                                        <select name="IdPlanta" id="IdPlanta" class="selectpicker show-tick IdPlanta" required>
                                            @foreach (var item in ViewBag.PlantasList)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <label for="IdLinea">Línea</label>
                                <div class="input-group">
                                    <div class="form-line">
                                        <select name="IdLinea"
                                                class="selectpicker show-tick IdLinea"
                                                data-dropup-auto="false"
                                                data-size="5"
                                                data-live-search="true" required></select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <label for="IdAno">Año</label>
                                <div class="input-group">
                                    <div class="form-line exep">
                                        <input type="text" name="YearMttr" id="YearMttr" class="yearpicker form-control" required />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <button id="btnGenerarMttr" class="btn btn-default waves-effect align-center" style="margin-top:7%;">
                                    <i class="material-icons">check</i>
                                    <span>Generar información</span>
                                </button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div id="gridMttr" class="gridMttr"></div>
                            </div>
                            <div class="col-md-6">
                                <div class="card hdd" style="border-radius:10px;">
                                    <div class="body initC">
                                        <canvas id="chart" class="animated fadeIn"></canvas>
                                    </div>
                                </div>                                
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane fade animated bounceInLeft" id="mtbf">
                <b>MTBF</b>
                <b>Profile Content</b>
                <p>
                    Lorem ipsum dolor sit amet, ut duo atqui exerci dicunt, ius impedit mediocritatem an. Pri ut tation electram moderatius.
                    Per te suavitate democritum. Duis nemore probatus ne quo, ad liber essent
                    aliquid pro. Et eos nusquam accumsan, vide mentitum fabellas ne est, eu munere
                    gubergren sadipscing mel.
                </p>
            </div>
        </div>
    </div>
</div>

<!-- Select Plugin Js -->
<script src="~/Scripts/plugins/bootstrap-select/js/bootstrap-select.min.js"></script>
<script src="~/Scripts/plugins/bootstrap-select/js/i18n/defaults-es_CL.js"></script>
<!--YEARPICKER JS-->
<script src="~/Scripts/plugins/yearpicker/yearpicker.js"></script>
<!--SLICKGRID JS-->
<script src="~/Scripts/plugins/slickgrid/lib/jquery-ui-1.11.3.js"></script>
<script src="~/Scripts/plugins/slickgrid/lib/jquery.event.drag-2.3.0.js"></script>
<script src="~/Scripts/plugins/slickgrid/slick.core.js"></script>
<script src="~/Scripts/plugins/slickgrid/slick.grid.js"></script>
<!--CHART JS-->
<script src="~/Scripts/plugins/chartjs/Chart.bundle.min.js"></script>
<script>
    //FILL GRID
    //SLICKGRID
    var data = [];
    var grid;

    var columns = [
        { id: "line", name: "Línea", field: "LineName",width:150 },
        { id: "year", name: "Año", field: "Year", width: 50 },
        { id: "mes", name: "Mes", field: "MesName", sortable:true },
        { id: "mttr", name: "MTTR", field: "Mttr" }
    ];

    var options = {
        enableCellNavigation: true,
        enableColumnReorder: false,
        forceFitColumns: true,
        multiColumnSort: true
    }

    function TotalsDataProvider(data, columns) {
        var totals = {};
        var totalsMetadata = {
            // Style the totals row differently.
            cssClasses: "totals",
            columns: {}
        };
        // Make the totals not editable.
        for (var i = 0; i < columns.length; i++) {
            totalsMetadata.columns[i] = { editor: null };
        }
        this.getLength = function () {
            return data.length + 1;
        };
        this.getItem = function (index) {
            return (index < data.length) ? data[index] : totals;
        };
        this.updateTotals = function () {
            var columnIdx = 3;          
            var columnId = columns[columnIdx].id;            
            var total = 0;
            var i = data.length;
            while (i--) {
                total += (parseInt(data[i]['Mttr'], 10) || 0);                
            }
            totals['Mttr'] = "Sum:  " + total;
            console.log(total);
        };
        this.getItemMetadata = function (index) {
            return (index != data.length) ? null : totalsMetadata;
        };
        this.updateTotals();
    }

    function initGrid() {
        var dataProvider = new TotalsDataProvider(data, columns);
        
        grid = new Slick.Grid("#gridMttr", dataProvider, columns, options);

        //HABILITAR ORDENACIÓN
        grid.onSort.subscribe(function (e, args) {
            var cols = args.sortCols;

            data.sort(function (dataRow1, dataRow2) {
                for (var i = 0, l = cols.length; i < l; i++) {
                    var field = cols[i].sortCol.field;
                    var sign = cols[i].sortAsc ? 1 : -1;
                    var value1 = dataRow1[field], value2 = dataRow2[field];
                    var result = (value1 == value2 ? 0 : (value1 > value2 ? 1 : -1)) * sign;
                    if (result != 0) {
                        return result;
                    }
                }
                return 0;

            });
            grid.invalidate();
            grid.render();

        });        

        $('#gridMttr').show("slow");
        $('.hdd').show("slow");
    }

    //ORDENAR POR MES
    var sortColumn = "mes";
    var sortDir = 1;

    $(function () {
        //OCULTAR GRID
        $('#gridMttr').hide(1000);
        $('.hdd').hide(1000);

        //AL MOMENTO DE SELECCIONAR UNA PLANTA, SE DISPARA EL EVENTO
        $('.IdPlanta').change(function ()
        {
            //OBTENER ID SELECCIONADO
            var idPlanta = $(this).find("option:selected").val();
            //URL PARA OBTENER LOS DATOS
            var url = '@Url.Content("~/")' + "Kpis/GetLineAsync";
            //RECREAR EL OBJETO SELECTPICKER
            $('.IdLinea').selectpicker('destroy');
            $('.IdLinea').empty();
            //INICIALIZAR OBJETO AJAX PARA TRAER DATOS DEL SERVIDOR
            $.ajax({
                //PARAMETRIZAR SERVICIO AJAX
                url: url,
                type: 'post',
                data: { id: idPlanta },
                //MOSTRAR LOADER ANTES DE INICIAR LA SOLICITUD
                beforeSend: function () {
                    $('.page-loader-wrapper').fadeIn();
                },
                success: function (response) {
                    //ITERAR CON LA LISTA DE RESULTADOS
                    $.each(response, function (i, linea) {
                        //CREAR ITEM CON CADA ITERACIÓN
                        $('.IdLinea').append($('<option>', {
                            value: linea.Value,
                            text: linea.Text
                        }));
                    });
                    //REFRESCAR Y RECARGAR EL OBJETO
                    $('.IdLinea').selectpicker('refresh');
                    //OCULTAR LOADER UNA VEZ CARAGADA LA INFORMACIÓN
                    $('.page-loader-wrapper').fadeOut();
                },
                //EN CASO DE ERROR, IMPRIMIRLO
                error: function (error) {
                    alert(error);
                }
            });
        });
               
        $('#btnGenerarMttr').click(function () {

            var id_line = $('.IdLinea').find("option:selected").val();
            var year = $('#YearMttr').val();


            //VALIDAR LOS FILTROS
            if (id_line > 0 && $.isNumeric(year)) {
                var url_filter = '@Url.Content("~/")' + "Kpis/CalculateMttrAsync";
                var url_filterChart = '@Url.Content("~/")' + "Kpis/CalculateCharDataAsync";

                //INICIALIZAR OBJETO AJAX PARA TRAER DATOS DEL SERVIDOR
                $.ajax({
                    //PARAMETRIZAR SERVICIO AJAX
                    url: url_filter,
                    type: 'post',
                    data: { id_line: id_line, year: year },
                    //MOSTRAR LOADER ANTES DE INICIAR LA SOLICITUD
                    beforeSend: function () {
                        $('.page-loader-wrapper').fadeIn();
                    },
                    success: function (response) {

                        data = response;
                        initGrid();


                        //INICIALIZAR OBJETO AJAX PARA TRAER DATOS DEL SERVIDOR
                        $.ajax({
                            //PARAMETRIZAR SERVICIO AJAX
                            url: url_filterChart,
                            type: 'post',
                            data: { id_line: id_line, year: year },
                            //MOSTRAR LOADER ANTES DE INICIAR LA SOLICITUD
                            beforeSend: function () {
                                $('.page-loader-wrapper').fadeIn();
                            },
                            success: function (response_chart) {

                                InitChar(response_chart,data);

                                //OCULTAR LOADER UNA VEZ CARAGADA LA INFORMACIÓN
                                $('.page-loader-wrapper').fadeOut();
                            },
                            //EN CASO DE ERROR, IMPRIMIRLO
                            error: function (request, status, error) {
                                alert('Error al aplicar filtros a tiempos de carga: ' + error + request.responseText);

                            }
                        });
                        //OCULTAR LOADER UNA VEZ CARAGADA LA INFORMACIÓN
                        $('.page-loader-wrapper').fadeOut();
                    },
                    //EN CASO DE ERROR, IMPRIMIRLO
                    error: function (request, status, error) {
                        alert('Error al aplicar filtros a tiempos de carga: ' + error + request.responseText);
                    }
                });                
            }
            else {
                swal("Tiempos de carga", "Debe seleccionar Línea y Año", "warning");
            }
        });

    });
</script>
<script>    
    function InitChar(response_chart, d) {

        $("canvas#chart").remove();
        $("div.initC").append('<canvas id="chart" class="animated fadeIn"></canvas>');
        // set default to straight lines - no curves
        // Chart.defaults.global.elements.line.tension = 0;
        // set default no fill beneath the line
        
        Chart.defaults.global.elements.line.fill = false;

        var dataEspTec = response_chart.map(e => e.EsperaTecnico);
        var dataTiemDiag = response_chart.map(e => e.TiempoDiagnostico);
        var dataEsperaRep = response_chart.map(e => e.EsperaRepuestos);
        var dataTiempoRep = response_chart.map(e => e.TiempoReparacion);
        var dataTiempoPru = response_chart.map(e => e.TiempoPruebas);
        var Meses = response_chart.map(e => e.MesName);
        var Mttr = d.map(e => e.Mttr);
        var max_mttr = Math.max.apply(Math, Mttr);
        // stacked bar with 2 unstacked lines - nope
        var barChartData = {

            labels: Meses,
            datasets: [
                {
                    type: 'line',
                    label: 'MTTR',
                    yAxisID: "y-axis-1",
                    backgroundColor: "rgba(151,187,205,0.15)",
                    data: Mttr
                },
                {
                    type: 'bar',
                    label: 'Tiempo de espera inicial del técnico (min)',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(255, 99, 132)",
                    data: dataEspTec
                },
                {
                    type: 'bar',
                    label: 'Tiempo de Diagnóstico (min)',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(255, 159, 64)",
                    data: dataTiemDiag
                }, 
                {
                    type: 'bar',
                    label: 'Tiempo de espera por repuestos (min)',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(255, 205, 86)",
                    data: dataEsperaRep
                },
                {
                    type: 'bar',
                    label: 'Tiempo de Reparación o cambio de piezas (min)',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(75, 192, 192)",
                    data: dataTiempoRep
                },
                {
                    type: 'bar',
                    label: 'Pruebas y Tiempo de arranque (min)',
                    yAxisID: "y-axis-0",
                    backgroundColor: "rgb(54, 162, 235)",
                    data: dataTiempoPru
                }
            ]
        };


        var ctx = document.getElementById("chart").getContext("2d");
        // allocate and initialize a chart
        var ch = new Chart(ctx, {
            type: 'bar',
            data: barChartData,
            options: {
                title: {
                    display: true,
                    text: "MTTR - Min - Stacked (Combinado)"
                },
                tooltips: {
                    mode: 'label'
                },
                responsive: true,
                scales: {
                    xAxes: [{
                        stacked: true
                    }],
                    yAxes: [{
                        stacked: true,
                        position: "left",
                        id: "y-axis-0",
                        ticks: {
                            beginAtZero: true,
                            suggestedMax: max_mttr
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'Tiempo de Averías'
                        }
                    }, {
                        display: false,
                        stacked: false,
                        position: "right",
                        id: "y-axis-1",
                        ticks: {
                            beginAtZero: true,
                            suggestedMax: max_mttr
                        }
                    }]
                }
            }
        });
    } 

</script>